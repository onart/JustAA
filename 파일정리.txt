Scripts
	/Bosses
		/Boss.cs: 보스의 기초 추상 클래스
			- 최대 HP와 현재 HP, EXP를 담음
			ㄴ 일반 몹과 다른 점: HP바 모양이 다름
			- 다른 클래스 포함: Attacker, BossHp, DmgOrHeal
			- 함수: HP변동, 피격(public 가상), 속도설정, 방향전환, 체력 0일 때 행동(가상)
		/J1.cs: 중간보스 1
			- 무기를 던지기 때문에 손에 든 무기 수를 가짐
			- 함수: 충돌처리(지형과 플레이어)/거리파악/인스턴트 공격/GetHit(오버라이드)
	/CameraRelated
		/TargetMe.cs: 가상카메라 타겟 선정
			- Player를 찾아 성공할 때까지 타겟팅 반복
	/Controls
		/Charger.cs: 키를 일정 시간 눌렀다가 떼는 기술, 플레이어와 같이 부착
			- 조작키의 일부에 대응, 모든 설정값에 대하여 키다운을 파악
			- 다른 클래스 포함: Player
			- 현재 모두 1초로 통일되어 있는데(57행) 다른 float 배열을 만들어 각자 다르게 만들 수 있음
			- 함수: holdFor(업데이트 함수에서 호출, GetKey, GetKeyUp으로 확인), skillOn(점검이 필요한지를 확인)
		/ComQ.cs: 키를 정해진 순서대로 누르는 기술, 플레이어와 같이 부착
			- 다른 클래스 포함: Player
			- 조작키의 일부에 대응하는 enum 정의, 그것이 나열된 상수로 커맨드 내용 정의
			- 함수: 큐 내용을 이미지로 적용, 입력값에 따라 큐에 적용, 입력키를 큐에 삽입, 큐에 읽힌 데이터 비교, 커맨드 기술 배움 여부
		/MyAttacker.cs: 플레이어의 공격 판정 콜라이더
			- 힘, 피해량(모두 public)
			- 트리거 엔터 함수만 존재(적/오브젝트와의 충돌 -> 힘을 가하고 피해 적용)
		/Player.cs: 플레이어 조작, 이벤트 플래그 등의 데이터를 가짐
			- 다른 클래스 포함: DmgOrHeal
			- 특이 사항: 플래그의 참조를 리턴하는 FLAGS
			- 함수: 낙하 속도 제한, 좌우 이동, 점프, 앉기, 다운 후 일어서기, HP변동(public), 피격(public), 경직(public), 경험치 획득(public), 체력치트체크, 아이템 검사, 에테르(계(system) 속도등록)
	/EnemyBehaves
		/Drone1.cs: 적 1. 가까이서 주먹질
			- 플레이어가 공격 가능한 위치에 있을 때마다 애니메이션 트리거 발동
			- 함수: 뒤돌기, 공격들(애니메이터 public), 이동판단
		/Drone2.cs: 적 2.
			- 아직 안 만듦
		/Enemy.cs: 적 기초 추상 클래스
			- 휴면, 자유, 적대 상태머신(트리거 기준 발동), 플레이어의 트랜스폼을 알고 있음
			- 다른 클래스 포함: FoeHp, DmgOrHeal
			- 함수: HP변동(public), 피격(public), 속도조정, 뒤돌기, 체력0일 때(가상)
		/GunProj.cs: 총알. Attacker의 파생 클래스
			- 트리거 입장 0.05초 후 파괴
			- 초속도는 트랜스폼의 각도를 이용하여 결정
		/Laun.cs: 적 3. 플레이어와 먼 방향으로 움직이면서 스나이핑 하나, 예측샷 하나(하드 한정)
			- 함수: 플레이어와의 상대 위치, 상대 속도에 따라 팔 각도 조정, 발사
		/Spark.cs: 적 4. 플레이어를 향해 움직이기만 함, 닿으면 피해
			- 움직임 외 특별한 코드는 없음, 닿으면 공격=Attacker.
		/Sting.cs: 적 5. 날아다님
			- 아직 안 만듦
	/Entities
		/Bed.cs: Entity의 파생, 침대
			- 침대를 아는지 모르는지의 플래그, 액션은 대사 or 플레이어의 체력을 완전히 회복
		/Door.cs: Entity의 파생, 문
			- 다른 씬과 문의 이름으로 연결. 다른 씬에서 온 플레이어의 위치를 자신의 위치와 같게 고정함
			- 다른 클래스 포함: Fade2
			- 특이 사항: 문마다 대사/열림 중 하나를 결정하는 변수, Fade2와 코드가 완전히 연결되어 있음
			- 함수: 씬 이동(public), 반응 결정(public, 플레이어 플래그에 따라서 맵 이벤트에 의해 호출됨), 말을 걸지 않아도 호출
		/Downward.cs: 버리는 스크립트, 구조적 역할은 없고 그냥 참고용
		/DynaPlat.cs: 움직이는 발판
			- 다른 클래스 포함: Player
			- 초속도를 기준으로 왕복, 속도 reserve시킴, 발이 옆으로 끼었을 때 발판이 벽을 지나가는 문제 해결법 강구 중
		/Entity.cs: 말을 걸 수 있는 개체의 기초 추상 클래스
			- 클래스마다 다른 레이캐스트로 플레이어 접촉 파악
			- 다른 클래스 포함: Player(static), TalkManager(static)
			- 함수: 지정 대화 시작, 대화 선택지 변수 수용, 액션(public 추상), 변수 수용 시 행동(추상)
		/Master.cs: 기술을 가르쳐 주는 NPC
			- 기술 배우는 비용 체크로 인한 선택지 넣는 추가 변수, 대화의 흐름을 switch로 제어
			- 배운 기술인지 체크/경험치 비교/체크에 걸리지 않는 체력 변동
		/MyDesk.cs: 컴퓨터 NPC
			- 대화 switch 제어
		/Parrot.cs: 한 가지 대사만 하는 개체의 종합(ex: 도움말)
			- public 정수: 대화 번호
		/UniformLinear.cs: 등속직선운동인듯? 어디 쓰는지 까먹음
		/USB.cs: 저장용 개체
			- 예를 고른 경우 SaveLoad에 위임

	/Managers
		/AudPlayer.cs: 오디오 소스가 부착되어 있는 경우 그 인덱스를 받아 1회 플레이
		/BaseSet.cs: 필요한 상수를 담은 네임스페이스(static class)
			- 캐릭터 대화창 일러스트와 이름, 대화 대사(+표정), 선택지, 플래그, 맵이름과 씬이름 연결
		/DataFiller.cs: 데이터 덩어리, static이 아닌 일시적 존재
			- 타이틀에서 데이터를 받아 Player에 채움
		/Helper.cs: 플레이어를 특정 USB 위치로 불러옴
			- Awake에서 모두 해결
		/InstantKill.cs: 다른 클래스에서 오브젝트의 파괴를 명령 가능
		/KeyConfig.cs: SysManager과 연계, 조작키 설정
			- 버튼 UI와 연결되어 있음 -> 클릭 시 노랗게 변함, 키 입력 시 중복을 허용하지 않고 해당 키로 설정
		/OnOver.cs: 게임오버 씬에서 다시하기/메인으로
			- 타이틀에서 새로하기인 경우 난이도를 유지한 채 다시 시작함, 그 외에는 그대로 이어하기를 누름
		/SaveLoad.cs: 세이브만 담당함. 로드는 아님
			- 다른 클래스 포함: Player
			- 플래그, 난이도, 맵, 최대HP... 등 정보를 저장하며 순서는 랜덤하되 플래그와 동봉
		/Scenemover.cs: 씬을 불러오면서 메뉴를 끔
		/SysManager.cs: 다양한 역할
			- 다른 클래스 포함: KeyConfig
			- 시간 정지(대화/메뉴), 난이도, 치트 블로커, 조작 봉인기
			- 키맵 기본 설정은 여기 있음
		/TalkManager.cs: 대화창에 직접 붙어 있음
			- BaseSet에서 대화를 불러옴
			- 다른 클래스 포함: DialogBox
			- 다음으로 넘기기/선택지 온오프/NoteFor이 있음
		/TitleManager.cs: 타이틀에서 치트체크/로드 및 데이터 디스플레이를 담당
		/VisualSave.cs: 커맨드 큐/FPS 보이기 등 여부를 레지스트리 저장
	/MapEvs
		/CorridorEv.cs: 복도 맵
			- 다른 클래스 포함: Door
			- Update 함수에서 플래그 체크
		/MapEv.cs: 맵이벤트의 부모 클래스, Entity의 파생
			- 맵 입장 시 맵 이름을 표시해 주는 최소한의 기능. 추상 클래스 아님
		/Six1Ev.cs: 맵 입장 시 일회성으로 나오는 대사
			- public으로 건드릴 플래그와 나오는 대사를 받음
		/Six6Ev.cs: 첫 중간보스맵에서 안내 표시
		/StairsEv.cs: 층계에서의 이벤트, 콜라이더도 있음
	/Misc
		/BossHp.cs: 좀 큰 보스 체력바를 보스와 연결(Boss와 HAS-A관계)
		/DiffRes.cs: 난이도에 따라 있거나 없는 개체에 부착, public으로 조건을 받음(쉬움, 보통, 어려움, 그리고 이상, 이하)
		/DmgOrHeal.cs: 데미지 텍스트를 위로 올라가면서 투명하게 해 주는 것
		/HitEffect.cs: 타격 이펙트
		/InteractEffect.cs: 개체와 상호작용 가능한 위치인 경우, 해당 키를 위에 띄움
		/Maintainable.cs: 필요한 개체의 맵 이동을 위해 DontDestroyOnLoad를 호출. prefab 참고
		/Watcher.cs: 플레이어와의 상대 위치에 따라 각도가 변경됨
	/NonEnemy
		/Attacker.cs: 플레이어에게 피해를 주는 트리거, HPChanger의 파생
			- 가하는 힘 벡터, 향하고 있는 방향 벡터
		/ConstantAtk.cs: 내부의 플레이어에게 주기적으로 여러 번 피해를 주는 트리거, Attacker의 파생
		/FoeHp.cs: 일반 몹의 작은 체력바, 변할 때마다 보여주고 점점 투명해짐
		/Healer.cs: HpChanger의 파생, 플레이어가 회복됨
		/HPChanger.cs: 추상 클래스, 닿은 플레이어에게 Act(추상함수)를 가하며 이는 항상 체력을 변화시킴
	/Obstacles
		/Beamz.cs: 광선을 필요한 길이만큼 렌더링 및 회전시킴
		/Hooke.cs: 점프대. 큰 속도를 Reserve시킴
		/Portals.cs: 닿은 플레이어를 특정 위치로 강제 이동시킴, ex: 낙뎀
	/UIRelated
		/DialogBox.cs: 대화상자 자체에 붙어 대사를 한 글자씩 출력
		/Fade1.cs: 타이틀에서 로고 보여주는데 쓰던 것 같다. 정확히 기억은 안 난다
		/Fade2.cs: 문과 연결, Maintainable에 포함되어 항상 주인공을 따라다님
			- 다른 클래스 포함: Door
			- 업데이트 함수에서 어둡게 했다가 Door를 활성화시키고 밝게 하는데, 애니메이터로 바꾸는 게 낫겠다.
		/FPS.cs: FPS를 좌측 상단에 표시한다. OnGUI.
		/HpBar.cs: 플레이어의 HP바. 플레이어를 보고 업데이트하는데 이것도 플레이어의 HpChange 안에 넣는 게 좋을지는 모른다
		/Options.cs: BaseSet에서 사용하는 선택지 개체. 선택지 수와 내용, 그리고 상자의 크기를 담는다

Prefabs
	/BEAMP: 레이저 전구와 레이저로 구성, Beamz 클래스를 포함하고 레이저는 ConstantAtk 클래스를 포함한다.
	/CM vcam1: 가상 카메라에 TargetMe를 담았는데 씬 복붙이 더 나은 방법이라 필요 없다.
	/DmgTxt: 텍스트메시프로, 데미지/힐을 표시한다. DmgOrHeal 클래스를 포함
	/Door1: 문. Door 클래스를 포함한다.
	/DRONE1, DRONE2, LAUNCHER, SPARK, STING: 모든 적은 각각 애니메이터, 디텍터(상태머신), HP바, 공격트리거, 피격트리거, 충돌체를 포함한다.
	/Dyna_Plat: DynaPlat 클래스를 포함하는 움직이는 발판.
	/GUN_PROJ: 총알. GunProj 클래스를 포함한다.
	/HIT: 애니메이터를 수행하고 종료하는 특수효과
	/Hooke: 점프대. 주먹처럼 생겼고 트리거로 밀어낸다.
	/MAINTAIN: 매니저들과 플레이어 등을 다양하게 포함하는데 길어서 안 적는다.
	/SLASH1, IMPALE: 임시로 만들어 둔 애니메이터를 수행하고 종료하는 공격 특수효과
	/SPIKE: 닿으면 한 방에 죽는다. Attacker 포함
	/thrown_knife: 중간보스의 투사체인데 미완성
	/USB: USB와 Helper 클래스를 포함
Animators
	/1회성: HIT, IMPALE, SLASH.
	/검은드론1: 피격, 왼주먹, 오른주먹, 통상으로 구성
	/검은드론2: 미완성
	/관장: 애니메이션만 담는다.
	/런처: 애니메이션만 담는다.
	/보스이름: 박진감 있어 보이게 보스를 소개하고 빠진다.
	/스팅: 미완성
	/스파크: 피격, 통상
	/오늘: 공중, 콤보, 대시공격, 박치기, 피격, 통상, 다운, 앉음, 공중회전, 상향, 상향공격, 걷기, 대시 등
	/J1: 공중, 돌진, 콤보, 다운, 피격, 통상, 무기회수, 무기투척, 걷기 등. 구체적인 함수호출은 미완성
	/훅: 통상(1이미지), 튕김